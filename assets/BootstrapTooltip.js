var b=Object.defineProperty,d=Object.defineProperties;var k=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable;var l=(o,t,a)=>t in o?b(o,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[t]=a,c=(o,t)=>{for(var a in t||(t={}))p.call(t,a)&&l(o,a,t[a]);if(s)for(var a of s(t))e.call(t,a)&&l(o,a,t[a]);return o},i=(o,t)=>d(o,k(t));var m=(o,t)=>{var a={};for(var r in o)p.call(o,r)&&t.indexOf(r)<0&&(a[r]=o[r]);if(o!=null&&s)for(var r of s(o))t.indexOf(r)<0&&e.call(o,r)&&(a[r]=o[r]);return a};import{l as u,a as T}from"./index.js";import{T as f,t as n}from"./Tooltip.js";const C=u(a=>{var r=a,{className:o}=r,t=m(r,["className"]);return T(f,i(c({},t),{arrow:!0,classes:{popper:o},disableInteractive:!0}))})(({theme:o})=>({[`& .${n.arrow}`]:{color:o.palette.common.black},[`& .${n.tooltip}`]:{backgroundColor:o.palette.common.black}}));export{C as B};
