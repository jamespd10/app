var d=Object.defineProperty,x=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var l=(t,e,o)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,n=(t,e)=>{for(var o in e||(e={}))i.call(e,o)&&l(t,o,e[o]);if(s)for(var o of s(e))p.call(e,o)&&l(t,o,e[o]);return t},u=(t,e)=>x(t,m(e));var c=(t,e)=>{var o={};for(var r in t)i.call(t,r)&&e.indexOf(r)<0&&(o[r]=t[r]);if(t!=null&&s)for(var r of s(t))e.indexOf(r)<0&&p.call(t,r)&&(o[r]=t[r]);return o};import{s as T,r as I,a as F}from"./index.js";import{T as b}from"./TextField.js";const g=T(b)(({labelStyles:t})=>({"& .MuiOutlinedInput-root":{"& fieldset":{borderColor:"#8f8f8f"}},"& label":n({},t)})),y=I.exports.forwardRef((t,e)=>{const f=t,{onFocus:o}=f,r=c(f,["onFocus"]);return F(g,u(n({},r),{ref:e,onFocus:a=>{a.target.select&&a.target.select(),o&&o(a)}}))});y.displayName="TextInput";export{y as T};
